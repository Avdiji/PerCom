use serde::{Deserialize, Serialize};

/// Represents a user entity returned by the `/users` API.
///
/// This structure is used both internally and in API responses.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct User {
    /// Unique identifier for the user (e.g., UUID).
    pub id: String,

    /// Display nickname of the user.
    pub nickname: String,

    /// Email address associated with the user.
    pub email: String,
}

/// Input structure used for creating a new user via API requests.
///
/// Unlike [`User`], this struct does not include an `id` field,
/// as the ID is generated by the server upon creation.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct UserInput {
    /// Display nickname to be associated with the new user.
    pub nickname: String,

    /// Email address to be stored for the new user.
    pub email: String,
}
